server:
  port: 8080
  #use-forward-headers: true
  forward-headers-strategy: framework
  servlet:
    context-path: /${spring.application.name}
spring:
   application:
    name: archetype-api-composite
   profiles:
     active: dev, security
   config:
     import: "classpath:/application-dev.yml,classpath:/application-security.yml"

management:
  endpoints:
    web:
      #base-path: /ocp-nsp-sorteo
      exposure:
        #include: '*'
        include: health, metrics , prometheus
  endpoint:
    health:
      show-details: ALWAYS
  metrics:
   tags:
    application: ${spring.application.name}
    
  otlp:
    #tracing:
          #endpoint: http://localhost:4317
      #endpoint: http://localhost:4318/v1/traces
      #endpoint: http://localhost:4318
    metrics:
      export:
            #url: http://localhost:4317 
        url: http://localhost:4318/v1/metrics
        #url: http://localhost:4318
        step: 10s
otel:
  service:
    name: ${spring.application.name}
  exporter:
    otlp:
      #protocol: grpc
      #endpoint: http://localhost:4317
      endpoint: http://localhost:4318
  metrics:
    exporter:
      - "prometheus"
      - "looging"
      
  instrumentation:
    jdbc.enabled: true
    common.db-statement-sanitizer.enabled: true ##Enables the DB statement sanitization.ALL TYPES DBS
    #jdbc.statement-sanitizer.enabled: true ##Enables the only  jdbc statement sanitization.
    micrometer.enabled: true
    spring-webflux.enabled: true
    